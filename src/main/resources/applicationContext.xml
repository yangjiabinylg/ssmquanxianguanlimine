<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--
            spring 配置文件
    -->
    <!--配置自动扫描包   扫描这个包下面的组件     Spring的IOC容器不扫描Controller和ControllerAdvice-->
    <!--<context:component-scan base-package="com.zjyouths.healthproject.ssm">-->
    <context:component-scan base-package="com.zjyouths.healthproject.ssmnew">
        <!--  这个和SpringMVC取反  不扫描controller 其他都扫描 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <!--  这个也不用扫描  异常捕获使用  -->
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>






    <!--读取jdbc的配置文件--><!--读取连接数据库的配置信息文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--配置数据库连接池-->
    <!--读取 出字段   使用阿里巴巴的数据库 连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 配置jdbcTemplate  spring自带的  不用了用mybatis-->
    <!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
        <!--&lt;!&ndash;引用上面的DataSource&ndash;&gt;-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->







    <!--配置事务管理器-->
    <bean  id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--开启使用注解的方式配置事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>






    <!--配置sqlSessionFactory   扫描mapper文件-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--  配置mybatis配置文件  -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!--   配置自动扫描需要生成mapper代理类的mapper接口
           将生成的代理类放入IOC容器，bean的名字默认是类名首字母小写
           OrderMapper -> orderMapper
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--   为com.zjyouths.healthproject.ssm.dao包生成mapper代理   -->
        <property name="basePackage" value="com.zjyouths.healthproject.ssmnew.dao"/>
    </bean>








</beans>