<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--  springMvc 配置文件  -->
    <!--
          配置扫描  扫描这个包下面的组件   为了保证单例  SpringMVC只扫描 controller
          use-default-filters="false"  不使用默认过滤器  我们指定扫描  只扫描 controller
    -->
    <context:component-scan base-package="com.zjyouths.healthproject.ssmnew" use-default-filters="false">
        <!--  只扫描controller   org.springframework.stereotype.Controller 去controller复制这个类 -->
        <!--   SpringMVC的 ioc容器  只扫描Controller  -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <!--   ControllerAdvice  这个也要扫描-->
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>





    <!--配置视图解析器   好像就是配置jsp文件的位置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀-->
        <property name="prefix" value="/WEB-INF/views/"/>
        <!--后缀-->
        <property name="suffix" value=".jsp"/>
    </bean>









    <!--
            这2个以后项目就顺手加上你的项目不可能 没有jquery的
           静态资源访问不到 是被controller拦截了   访问404
           http://localhost:8080/sm01/static/imgs/1.jpg
           http://localhost:8080/sm01/   static/imgs/1.jpg
           http://localhost:8080/sm01/   hello
           一样处理了

           hello  - - >   static/imgs/1.jpg

           配置这个就好了（就是使用默认的Servlet Tomcat的servlet） 就可以读取静态资源   使用默认Servlet
           但是  http://localhost:8080/sm01/hello 不能访问了（不识别注解的controller了）

           防止静态资源404
       -->
    <mvc:default-servlet-handler/>
    <!--  配置这个就好了  2种都能访问了   使用注解的方式配置Controller  读取注解的controller了
        conversion-service="conversionService"
        将类型转换器装配到 annotation-driven
            -->
    <!--<mvc:annotation-driven conversion-service="conversionService"/>-->
    <mvc:annotation-driven  />

    <!--  访问main  就可以访问main的jsp-->
    <mvc:view-controller path="/main" view-name="main"/>

    <!--  映射资源文件   -->
    <mvc:resources mapping="/static/**" location="static/"/>


</beans>